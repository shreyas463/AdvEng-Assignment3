@startuml

' Define instances of Folder and File after the 'app' folder deletion

object "phpDemo1: Folder" as mainFolder {
  name = "php_demo1"
  files = []
  subfolders = ["Source Files", " Include Path", "Remote Files"]
}

object "Source Files: Folder" as sf1 {
  name = "Source Files"
  files = []
  subfolders = [".phalcon", "cache", "public"]
}

object  ".phalcon : Folder" as sf4 {
  name = ".phalcon"
  files = []
  subfolders = []
}

object "cache : Folder" as sf5 {
  name = "cache"
  files = []
  subfolders = []
}

object "public : Folder" as sf6 {
  name = "public"
  files = [".htaccess", ".htrouter.php", "index.html"]
  subfolders = []
}

object ".htaccess: File" as f1 {
  name = ".htaccess"
}

object ".htrouter.php : File" as f2 {
  name = ".htrouter.php"
}

object "index.html : File" as f3 {
  name = "index.html"
}

object "Include Path: Folder" as sf2 {
  name = "Include Path"
  files = []
  subfolders = []
}

object "Remote Files" as sf3 {
  name = "Remote Files"
  files = []
  subfolders = []
}

' Representing the composition relationships
mainFolder *-- sf1
mainFolder *-- sf2
mainFolder *-- sf3

sf1 *-- sf4
sf1 *-- sf5
sf1 *-- sf6

sf6 *-- f1
sf6 *-- f2
sf6 *-- f3

@enduml